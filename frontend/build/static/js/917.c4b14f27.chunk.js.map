{"version":3,"file":"static/js/917.c4b14f27.chunk.js","mappings":"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","sources":["components/Auth/SendLink.js","../node_modules/@mui/icons-material/EmailOutlined.js","../node_modules/react-top-loading-bar/src/useInterval.ts","../node_modules/react-top-loading-bar/src/utils.ts","../node_modules/react-top-loading-bar/src/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport EmailOutlinedIcon from \"@mui/icons-material/EmailOutlined\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { sendLink } from \"../../redux/actions/userAction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst SendLink = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const [progress, setProgress] = useState(0);\r\n  const linkStatus = useSelector((state) => state.linkStatus);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    console.log(linkStatus);\r\n    if (\r\n      linkStatus.error !== undefined &&\r\n      linkStatus.error !== \"\" &&\r\n      !linkStatus.error.success\r\n    ) {\r\n      alert.error(linkStatus.error.message);\r\n    } else if (\r\n      linkStatus.linkStatus !== undefined &&\r\n      linkStatus.linkStatus !== \"\" &&\r\n      linkStatus.linkStatus.success\r\n    ) {\r\n      alert.success(linkStatus.linkStatus.message);\r\n    }\r\n  }, [linkStatus]);\r\n\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    setProgress(40);\r\n    await dispatch(sendLink(email));\r\n    setProgress(100);\r\n    navigate(\"/api/v1/reset/password\")\r\n    console.log(email);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoadingBar\r\n        color=\"#2b7a2b\"\r\n        height={4}\r\n        progress={progress}\r\n        onLoaderFinished={() => setProgress(0)}\r\n      />\r\n      <div className=\"flex justify-center items-center h-[100vh] w-full\">\r\n        <div className=\"flex flex-col justify-center items-stretch h-full w-full bg-white\">\r\n          <div className=\"flex items-center justify-center flex-col my-12\">\r\n            <div className=\"text-4xl text-green-600 my-2\">Forgot Password</div>\r\n            <div className=\"sub-heading my-2 px-2 text-lg text-gray-400 text-center italic\">\r\n              We will send you the password reset link on mail. Kindly enter\r\n              your Mail\r\n            </div>\r\n          </div>\r\n          <form\r\n            className=\"flex flex-col justify-center items-center\"\r\n            onSubmit={onSubmitHandler}\r\n          >\r\n            <div className=\"flex items-center\">\r\n              <div className=\"absolute ml-2\">\r\n                <EmailOutlinedIcon />\r\n              </div>\r\n              <input\r\n                className=\"bg-green-100 border-2 pl-12 py-2 my-2 rounded-md w-[18rem] sm:w-[20rem]\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button\r\n                style={{padding: \"10px\"}}\r\n                type=\"submit\"\r\n                className=\"rounded-md bg-green-500 mt-4 shadow-md text-white font-bold hover:bg-green-300\"\r\n              >\r\n                Send Link\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SendLink;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6zm-2 0-8 5-8-5h16zm0 12H4V8l8 5 8-5v10z\"\n}), 'EmailOutlined');\n\nexports.default = _default;","import { useEffect, useRef } from 'react'\n\n/** keep typescript happy */\nconst noop = () => {}\n\nexport function useInterval(\n  callback: () => void,\n  delay: number | null | false,\n  immediate?: boolean\n) {\n  const savedCallback = useRef(noop)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  })\n\n  // Execute callback if immediate is set.\n  useEffect(() => {\n    if (!immediate) return\n    if (delay === null || delay === false) return\n    savedCallback.current()\n  }, [immediate])\n\n  // Set up the interval.\n  useEffect(() => {\n    if (delay === null || delay === false) return undefined\n    const tick = () => savedCallback.current()\n    const id = setInterval(tick, delay)\n    return () => clearInterval(id)\n  }, [delay])\n}\n\nexport default useInterval\n","export function randomInt(min: number, max: number): number {\n  // @ts-ignore\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n","import * as React from 'react'\nimport {\n  CSSProperties,\n  useEffect,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport { useInterval } from './useInterval'\nimport { randomInt } from './utils'\n\ntype IProps = {\n  progress?: number\n  color?: string\n  shadow?: boolean\n  background?: string\n  height?: number\n  onLoaderFinished?: () => void\n  className?: string\n  containerClassName?: string\n  loaderSpeed?: number\n  transitionTime?: number\n  waitingTime?: number\n  style?: CSSProperties\n  containerStyle?: CSSProperties\n  shadowStyle?: CSSProperties\n}\n\nexport type LoadingBarRef = {\n  continuousStart: (startingValue: number, refreshRate: number) => void\n  staticStart: (startingValue: number) => void\n  complete: () => void;\n}\n\nconst LoadingBar = forwardRef<LoadingBarRef, IProps>(\n  (\n    {\n      progress,\n      height = 2,\n      className = '',\n      color = 'red',\n      background = 'transparent',\n      onLoaderFinished,\n      transitionTime = 300,\n      loaderSpeed = 500,\n      waitingTime = 1000,\n      shadow = true,\n      containerStyle = {},\n      style = {},\n      shadowStyle: shadowStyleProp = {},\n      containerClassName = ''\n    },\n    ref\n  ) => {\n    const isMounted = useRef(false);\n    const [localProgress, localProgressSet] = useState<number>(0)\n    const [pressedContinuous, setPressedContinuous] = useState<{\n      active: boolean\n      startingValue: number\n      refreshRate: number\n    }>({ active: false, startingValue: 20, refreshRate: 1000 })\n    const [usingProps, setUsingProps] = useState(false)\n\n    const [pressedStaticStart, setStaticStartPressed] = useState<{\n      active: boolean\n      value: number\n    }>({ active: false, value: 20 })\n\n    const initialLoaderStyle: CSSProperties = {\n      height: '100%',\n      background: color,\n      transition: `all ${loaderSpeed}ms ease`,\n      width: '0%',\n    }\n\n    const loaderContainerStyle: CSSProperties = {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      height,\n      background,\n      zIndex: 99999999999,\n      width: 100 + '%',\n    }\n\n    const initialShadowStyles: CSSProperties = {\n      boxShadow: `0 0 10px ${color}, 0 0 10px ${color}`,\n      width: '5%',\n      opacity: 1,\n      position: 'absolute',\n      height: '100%',\n      transition: `all ${loaderSpeed}ms ease`,\n      transform: 'rotate(3deg) translate(0px, -4px)',\n      left: '-10rem',\n    }\n\n    const [loaderStyle, loaderStyleSet] = useState<CSSProperties>(\n      initialLoaderStyle\n    )\n    const [shadowStyle, shadowStyleSet] = useState<CSSProperties>(\n      initialShadowStyles\n    )\n\n    useEffect(() => {\n      isMounted.current = true;\n      return () => {\n        isMounted.current = false;\n      }\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n      continuousStart(startingValue: number, refreshRate: number = 1000) {\n        if (pressedStaticStart.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(10, 20)\n        setPressedContinuous({\n          active: true,\n          refreshRate,\n          startingValue,\n        })\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      staticStart(startingValue: number) {\n        if (pressedContinuous.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(30, 50)\n        setStaticStartPressed({\n          active: true,\n          value: val,\n        })\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      complete() {\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n        localProgressSet(100)\n        checkIfFull(100)\n      },\n    }))\n\n    useEffect(() => {\n      loaderStyleSet({\n        ...loaderStyle,\n        background: color,\n      })\n\n      shadowStyleSet({\n        ...shadowStyle,\n        boxShadow: `0 0 10px ${color}, 0 0 5px ${color}`,\n      })\n    }, [color])\n\n    useEffect(() => {\n      if (ref) {\n        if (ref && progress !== undefined) {\n          console.warn(\n            'react-top-loading-bar: You can\\'t use both controlling by props and ref methods to control the bar! Please use only props or only ref methods! Ref methods will override props if \"ref\" property is available.'\n          )\n          return\n        }\n        checkIfFull(localProgress)\n        setUsingProps(false)\n      } else {\n        if (progress) checkIfFull(progress)\n\n        setUsingProps(true)\n      }\n    }, [progress])\n\n    const checkIfFull = (_progress: number) => {\n      if (_progress >= 100) {\n        // now it should wait a little bit\n        loaderStyleSet({\n          ...loaderStyle,\n          width: '100%',\n        })\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 10 + '%',\n          })\n        }\n\n        setTimeout(() => {\n          if (!isMounted.current) {\n            return;\n          }\n          // now it can fade out\n          loaderStyleSet({\n            ...loaderStyle,\n            opacity: 0,\n            width: '100%',\n            transition: `all ${transitionTime}ms ease-out`,\n            color: color,\n          })\n\n          setTimeout(() => {\n            if (!isMounted.current) {\n              return;\n            }\n            // here we wait for it to fade\n            if (pressedContinuous.active) {\n              // if we have continous loader just ending, we kill it and reset it\n              setPressedContinuous({\n                ...pressedContinuous,\n                active: false,\n              })\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (pressedStaticStart.active) {\n              setStaticStartPressed({\n                ...pressedStaticStart,\n                active: false,\n              })\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (onLoaderFinished) onLoaderFinished()\n            localProgressSet(0)\n            checkIfFull(0)\n          }, transitionTime)\n        }, waitingTime)\n      } else {\n        loaderStyleSet((_loaderStyle) => {\n          return {\n            ..._loaderStyle,\n            width: _progress + '%',\n            opacity: 1,\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          }\n        })\n\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 5.5 + '%',\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          })\n        }\n      }\n    }\n\n    useInterval(\n      () => {\n        const random = randomInt(10, 20)\n\n        if (localProgress + random < 90) {\n          localProgressSet(localProgress + random)\n          checkIfFull(localProgress + random)\n        }\n      },\n      pressedContinuous.active ? pressedContinuous.refreshRate : null\n    )\n\n    return (\n      <div className={containerClassName} style={{...loaderContainerStyle, ...containerStyle}}>\n        <div className={className} style={{...loaderStyle, ...style}}>\n          {shadow ? <div style={{...shadowStyle, ...shadowStyleProp}} /> : null}\n        </div>\n      </div>\n    )\n  }\n)\n\nexport {\n  IProps,\n}\n\nexport default LoadingBar\n"],"names":["useState","email","setEmail","dispatch","useDispatch","alert","useAlert","progress","setProgress","linkStatus","useSelector","state","navigate","useNavigate","useEffect","console","log","undefined","error","success","message","onSubmitHandler","e","preventDefault","sendLink","color","height","onLoaderFinished","className","onSubmit","type","placeholder","value","onChange","target","style","padding","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","noop","randomInt","min","max","Math","floor","random","LoadingBar","forwardRef","ref","background","transitionTime","loaderSpeed","waitingTime","shadow","containerStyle","shadowStyle","shadowStyleProp","containerClassName","isMounted","useRef","localProgress","localProgressSet","active","startingValue","refreshRate","pressedContinuous","setPressedContinuous","usingProps","setUsingProps","pressedStaticStart","setStaticStartPressed","initialLoaderStyle","transition","width","loaderContainerStyle","position","top","left","zIndex","initialShadowStyles","boxShadow","opacity","transform","loaderStyle","loaderStyleSet","shadowStyleSet","current","useImperativeHandle","continuousStart","warn","val","checkIfFull","staticStart","complete","_progress","setTimeout","_loaderStyle","callback","delay","immediate","savedCallback","id","setInterval","clearInterval","useInterval","React"],"sourceRoot":""}