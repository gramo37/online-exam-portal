{"version":3,"file":"static/js/533.3f8d07bc.chunk.js","mappings":"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","sources":["components/Auth/VerifyOTP.js","../node_modules/@mui/icons-material/Security.js","../node_modules/react-top-loading-bar/src/useInterval.ts","../node_modules/react-top-loading-bar/src/utils.ts","../node_modules/react-top-loading-bar/src/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SecurityIcon from \"@mui/icons-material/Security\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signInUser, verifyOTP, loadUser } from \"../../redux/actions/userAction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useNavigate } from \"react-router\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\n\r\nconst VerifyOTP = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state) => state.user);\r\n  const signInDetails = useSelector((state) => state.signInDetails);\r\n  const otpStatus = useSelector((state) => state.otp);\r\n  const alert = useAlert();\r\n  const navigate = useNavigate();\r\n  const [progress, setProgress] = useState(0);\r\n  const [isVerifyOTPClicked, setisVerifyOTPClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(user)\r\n    if (\r\n      otpStatus.otpStatus !== \"\" &&\r\n      otpStatus.otpStatus !== undefined &&\r\n      otpStatus.otpStatus.success &&\r\n      !user.loading &&\r\n      isVerifyOTPClicked\r\n    ) {\r\n      if (user.error !== undefined && user.error !== \"\") {\r\n        alert.error(user.error.message);\r\n      } else if (user.user !== \"\" && user.user !== undefined) {\r\n        alert.success(\"User registered Successfully.\");\r\n        navigate(\"/home\");\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(()=>{\r\n    console.log(otpStatus)\r\n    if (otpStatus.error !== \"\" && otpStatus.error !== undefined) {\r\n      alert.error(otpStatus.error.message);\r\n    }\r\n  }, [otpStatus])\r\n\r\n  useEffect(() => {\r\n    console.log(signInDetails)\r\n    if (signInDetails.userCredentials.name === undefined) {\r\n      alert.error(\"Sorry, Something went wrong.\");\r\n      navigate(\"/signup\");\r\n    }\r\n  }, []);\r\n\r\n  const [otp, setotp] = useState(\"\");\r\n\r\n  const signupChangeHandler = (e) => {\r\n    setotp(e.target.value);\r\n  };\r\n\r\n  const signupSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Verify OTP\r\n    setProgress(30)\r\n    await dispatch(verifyOTP(signInDetails.userCredentials.email, otp));\r\n    setisVerifyOTPClicked(true)\r\n    // Verify Register User\r\n    console.log(signInDetails)\r\n    setProgress(60)\r\n    await dispatch(\r\n      signInUser(\r\n        {\r\n          name: signInDetails.userCredentials.name,\r\n          email: signInDetails.userCredentials.email,\r\n          password: signInDetails.userCredentials.password,\r\n        },\r\n        signInDetails.userCredentials.role\r\n      )\r\n    );\r\n    setProgress(80)\r\n    await dispatch(loadUser());\r\n    setProgress(100)\r\n    // setotp(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <LoadingBar\r\n        color=\"#2b7a2b\"\r\n        height={4}\r\n        progress={progress}\r\n        onLoaderFinished={() => setProgress(0)}\r\n      />\r\n      <div className=\"flex justify-center items-center h-[100vh] w-full\">\r\n        <div className=\"flex flex-col justify-center items-stretch h-full w-full bg-white\">\r\n          <div className=\"flex items-center justify-center flex-col my-12\">\r\n            <div className=\"text-4xl text-green-600 my-2\">Verify OTP</div>\r\n            <div className=\"sub-heading my-2 text-lg text-gray-400 italic\">\r\n              We have sent you the OTP on email.\r\n            </div>\r\n          </div>\r\n          <form\r\n            className=\"flex flex-col justify-center items-center\"\r\n            onChange={(e) => signupChangeHandler(e)}\r\n            onSubmit={(e) => signupSubmit(e)}\r\n          >\r\n            <div className=\"flex items-center\">\r\n              <div className=\"absolute ml-2\">\r\n                <SecurityIcon />\r\n              </div>\r\n              <input\r\n                style={{ width: \"28rem\" }}\r\n                className=\"bg-green-100 pl-12 py-3 my-2 rounded-md\"\r\n                type=\"number\"\r\n                placeholder=\"Enter OTP\"\r\n                name=\"otp\"\r\n                value={otp}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"rounded-full bg-green-500 py-3 px-16 mt-4 shadow-md text-white font-bold hover:bg-green-300\"\r\n              >\r\n                VERIFY OTP\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VerifyOTP;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11v8.8z\"\n}), 'Security');\n\nexports.default = _default;","import { useEffect, useRef } from 'react'\n\n/** keep typescript happy */\nconst noop = () => {}\n\nexport function useInterval(\n  callback: () => void,\n  delay: number | null | false,\n  immediate?: boolean\n) {\n  const savedCallback = useRef(noop)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  })\n\n  // Execute callback if immediate is set.\n  useEffect(() => {\n    if (!immediate) return\n    if (delay === null || delay === false) return\n    savedCallback.current()\n  }, [immediate])\n\n  // Set up the interval.\n  useEffect(() => {\n    if (delay === null || delay === false) return undefined\n    const tick = () => savedCallback.current()\n    const id = setInterval(tick, delay)\n    return () => clearInterval(id)\n  }, [delay])\n}\n\nexport default useInterval\n","export function randomInt(min: number, max: number): number {\n  // @ts-ignore\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n","import * as React from 'react'\nimport {\n  CSSProperties,\n  useEffect,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport { useInterval } from './useInterval'\nimport { randomInt } from './utils'\n\ntype IProps = {\n  progress?: number\n  color?: string\n  shadow?: boolean\n  background?: string\n  height?: number\n  onLoaderFinished?: () => void\n  className?: string\n  containerClassName?: string\n  loaderSpeed?: number\n  transitionTime?: number\n  waitingTime?: number\n  style?: CSSProperties\n  containerStyle?: CSSProperties\n  shadowStyle?: CSSProperties\n}\n\nexport type LoadingBarRef = {\n  continuousStart: (startingValue: number, refreshRate: number) => void\n  staticStart: (startingValue: number) => void\n  complete: () => void;\n}\n\nconst LoadingBar = forwardRef<LoadingBarRef, IProps>(\n  (\n    {\n      progress,\n      height = 2,\n      className = '',\n      color = 'red',\n      background = 'transparent',\n      onLoaderFinished,\n      transitionTime = 300,\n      loaderSpeed = 500,\n      waitingTime = 1000,\n      shadow = true,\n      containerStyle = {},\n      style = {},\n      shadowStyle: shadowStyleProp = {},\n      containerClassName = ''\n    },\n    ref\n  ) => {\n    const isMounted = useRef(false);\n    const [localProgress, localProgressSet] = useState<number>(0)\n    const [pressedContinuous, setPressedContinuous] = useState<{\n      active: boolean\n      startingValue: number\n      refreshRate: number\n    }>({ active: false, startingValue: 20, refreshRate: 1000 })\n    const [usingProps, setUsingProps] = useState(false)\n\n    const [pressedStaticStart, setStaticStartPressed] = useState<{\n      active: boolean\n      value: number\n    }>({ active: false, value: 20 })\n\n    const initialLoaderStyle: CSSProperties = {\n      height: '100%',\n      background: color,\n      transition: `all ${loaderSpeed}ms ease`,\n      width: '0%',\n    }\n\n    const loaderContainerStyle: CSSProperties = {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      height,\n      background,\n      zIndex: 99999999999,\n      width: 100 + '%',\n    }\n\n    const initialShadowStyles: CSSProperties = {\n      boxShadow: `0 0 10px ${color}, 0 0 10px ${color}`,\n      width: '5%',\n      opacity: 1,\n      position: 'absolute',\n      height: '100%',\n      transition: `all ${loaderSpeed}ms ease`,\n      transform: 'rotate(3deg) translate(0px, -4px)',\n      left: '-10rem',\n    }\n\n    const [loaderStyle, loaderStyleSet] = useState<CSSProperties>(\n      initialLoaderStyle\n    )\n    const [shadowStyle, shadowStyleSet] = useState<CSSProperties>(\n      initialShadowStyles\n    )\n\n    useEffect(() => {\n      isMounted.current = true;\n      return () => {\n        isMounted.current = false;\n      }\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n      continuousStart(startingValue: number, refreshRate: number = 1000) {\n        if (pressedStaticStart.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(10, 20)\n        setPressedContinuous({\n          active: true,\n          refreshRate,\n          startingValue,\n        })\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      staticStart(startingValue: number) {\n        if (pressedContinuous.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(30, 50)\n        setStaticStartPressed({\n          active: true,\n          value: val,\n        })\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      complete() {\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n        localProgressSet(100)\n        checkIfFull(100)\n      },\n    }))\n\n    useEffect(() => {\n      loaderStyleSet({\n        ...loaderStyle,\n        background: color,\n      })\n\n      shadowStyleSet({\n        ...shadowStyle,\n        boxShadow: `0 0 10px ${color}, 0 0 5px ${color}`,\n      })\n    }, [color])\n\n    useEffect(() => {\n      if (ref) {\n        if (ref && progress !== undefined) {\n          console.warn(\n            'react-top-loading-bar: You can\\'t use both controlling by props and ref methods to control the bar! Please use only props or only ref methods! Ref methods will override props if \"ref\" property is available.'\n          )\n          return\n        }\n        checkIfFull(localProgress)\n        setUsingProps(false)\n      } else {\n        if (progress) checkIfFull(progress)\n\n        setUsingProps(true)\n      }\n    }, [progress])\n\n    const checkIfFull = (_progress: number) => {\n      if (_progress >= 100) {\n        // now it should wait a little bit\n        loaderStyleSet({\n          ...loaderStyle,\n          width: '100%',\n        })\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 10 + '%',\n          })\n        }\n\n        setTimeout(() => {\n          if (!isMounted.current) {\n            return;\n          }\n          // now it can fade out\n          loaderStyleSet({\n            ...loaderStyle,\n            opacity: 0,\n            width: '100%',\n            transition: `all ${transitionTime}ms ease-out`,\n            color: color,\n          })\n\n          setTimeout(() => {\n            if (!isMounted.current) {\n              return;\n            }\n            // here we wait for it to fade\n            if (pressedContinuous.active) {\n              // if we have continous loader just ending, we kill it and reset it\n              setPressedContinuous({\n                ...pressedContinuous,\n                active: false,\n              })\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (pressedStaticStart.active) {\n              setStaticStartPressed({\n                ...pressedStaticStart,\n                active: false,\n              })\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (onLoaderFinished) onLoaderFinished()\n            localProgressSet(0)\n            checkIfFull(0)\n          }, transitionTime)\n        }, waitingTime)\n      } else {\n        loaderStyleSet((_loaderStyle) => {\n          return {\n            ..._loaderStyle,\n            width: _progress + '%',\n            opacity: 1,\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          }\n        })\n\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 5.5 + '%',\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          })\n        }\n      }\n    }\n\n    useInterval(\n      () => {\n        const random = randomInt(10, 20)\n\n        if (localProgress + random < 90) {\n          localProgressSet(localProgress + random)\n          checkIfFull(localProgress + random)\n        }\n      },\n      pressedContinuous.active ? pressedContinuous.refreshRate : null\n    )\n\n    return (\n      <div className={containerClassName} style={{...loaderContainerStyle, ...containerStyle}}>\n        <div className={className} style={{...loaderStyle, ...style}}>\n          {shadow ? <div style={{...shadowStyle, ...shadowStyleProp}} /> : null}\n        </div>\n      </div>\n    )\n  }\n)\n\nexport {\n  IProps,\n}\n\nexport default LoadingBar\n"],"names":["dispatch","useDispatch","user","useSelector","state","signInDetails","otpStatus","otp","alert","useAlert","navigate","useNavigate","useState","progress","setProgress","isVerifyOTPClicked","setisVerifyOTPClicked","useEffect","console","log","undefined","success","loading","error","message","userCredentials","name","setotp","signupSubmit","e","preventDefault","verifyOTP","email","signInUser","password","role","loadUser","color","height","onLoaderFinished","className","onChange","target","value","signupChangeHandler","onSubmit","style","width","type","placeholder","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","noop","randomInt","min","max","Math","floor","random","LoadingBar","forwardRef","ref","background","transitionTime","loaderSpeed","waitingTime","shadow","containerStyle","shadowStyle","shadowStyleProp","containerClassName","isMounted","useRef","localProgress","localProgressSet","active","startingValue","refreshRate","pressedContinuous","setPressedContinuous","usingProps","setUsingProps","pressedStaticStart","setStaticStartPressed","initialLoaderStyle","transition","loaderContainerStyle","position","top","left","zIndex","initialShadowStyles","boxShadow","opacity","transform","loaderStyle","loaderStyleSet","shadowStyleSet","current","useImperativeHandle","continuousStart","warn","val","checkIfFull","staticStart","complete","_progress","setTimeout","_loaderStyle","callback","delay","immediate","savedCallback","id","setInterval","clearInterval","useInterval","React"],"sourceRoot":""}