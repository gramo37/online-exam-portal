{"version":3,"file":"static/js/115.e2ba1c3f.chunk.js","mappings":"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","sources":["components/Home/Exam/Result.js","components/Home/Exam/Results.js","redux/actions/schoolAction.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Result = (props) => {\r\n    const { score } = props\r\n    return (\r\n        <>\r\n            <div className='bg-white my-2 mx-2 rounded-md p-2 flex justify-between'>\r\n                <div className='italic text-lg text-center w-1/3 m-auto'>{score.studentId.name}</div>\r\n                <div className='italic text-lg text-center w-1/3 m-auto'>{score.score}</div>\r\n                <div className='italic text-lg text-center w-1/3 m-auto'>{score.score * 100 / (score.examId.questions.length)}%</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Result","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router'\r\nimport { getScores } from '../../../redux/actions/schoolAction'\r\nimport Result from './Result'\r\n\r\nconst Results = () => {\r\n    const dispatch = useDispatch()\r\n    const score = useSelector((state) => state.score)\r\n\r\n    const { examId } = useParams()\r\n\r\n    useEffect(async () => {\r\n        await dispatch(getScores(examId))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(score)\r\n        score?.score?.scores?.map((item) => {\r\n            console.log(item)\r\n        })\r\n    }, [score])\r\n\r\n    return (\r\n        <>\r\n            <div className='bg-white my-2 mx-2 rounded-md p-2 flex justify-between'>\r\n                <div className='font-bold text-lg text-center w-1/3 m-auto'>Name Of Student</div>\r\n                <div className='font-bold text-lg text-center w-1/3 m-auto'>Score</div>\r\n                <div className='font-bold text-lg text-center w-1/3 m-auto'>Percent</div>\r\n            </div>\r\n\r\n            {score?.score?.scores?.map((item) => {\r\n                return (<Result score={item} />)\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Results","import axios from \"axios\"\r\n\r\n// const host = `https://online-exam-portal-by-gramo.herokuapp.com`\r\n// const host = `http://localhost:5000`\r\nconst host = ``\r\n\r\nfunction getCookie(cname) {\r\n    let name = cname + \"=\";\r\n    let decodedCookie = decodeURIComponent(document.cookie);\r\n    let ca = decodedCookie.split(';');\r\n    for (let i = 0; i < ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nexport const searchStudent = (keyword) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"RequireGetStudents\"\r\n        })\r\n\r\n        const link = `${host}/api/v1/searchStudent?keyword=${keyword}`\r\n        const headers = {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        }\r\n        const token = getCookie(\"authToken\")\r\n        const { data } = await axios.post(link, {\r\n            authToken: token\r\n        })\r\n        dispatch({\r\n            type: \"GetStudentSuccess\",\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GetStudentFail\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const searchTeacher = (keyword) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"RequireGetTeachers\"\r\n        })\r\n        const link = `${host}/api/v1/searchTeacher?keyword=${keyword}`\r\n        const token = getCookie(\"authToken\")\r\n        const { data } = await axios.post(link, {\r\n            authToken: token\r\n        })\r\n        dispatch({\r\n            type: \"GetTeacherSuccess\",\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GetTeacherFail\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getStudentProfile = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"RequireGetStudents\"\r\n        })\r\n\r\n        const link = `${host}/api/v1/getStudentProfile/${id}`\r\n        const headers = {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        }\r\n\r\n        const { data } = await axios.get(link)\r\n\r\n        dispatch({\r\n            type: \"GetStudentSuccess\",\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GetStudentFail\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getMyStudents = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"RequireGetStudents\"\r\n        })\r\n\r\n        const link = `${host}/api/v1/showStudents`\r\n        const token = getCookie(\"authToken\")\r\n        const { data } = await axios.post(link, {\r\n            authToken: token\r\n        })\r\n\r\n        dispatch({\r\n            type: \"GetStudentSuccess\",\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GetStudentFail\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const addRemoveStudent = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"RequireAddStudents\"\r\n        })\r\n\r\n        const link = `${host}/api/v1/addStudent/${id}`\r\n        const token = getCookie(\"authToken\")\r\n        const headers = {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        }\r\n\r\n        const { data } = await axios.post(link, {\r\n            authToken: token\r\n        })\r\n\r\n        dispatch({\r\n            type: \"AddStudentSuccess\",\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"AddStudentFail\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getExam = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"RequireGetExam\"\r\n        })\r\n        const token = getCookie(\"authToken\")\r\n        const link = `${host}/api/v1/getExams`\r\n        const { data } = await axios.post(link, {\r\n            authToken: token\r\n        })\r\n\r\n        dispatch({\r\n            type: \"GetExamSuccess\",\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GetExamFail\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getMyExam = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"RequireMyExam\"\r\n        })\r\n        const token = getCookie(\"authToken\")\r\n        const { data } = await axios.post(`${host}/api/v1/getMyExams`, {\r\n            authToken: token\r\n        })\r\n        dispatch({\r\n            type: \"GetMyExamSuccess\",\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GetMyExamFailure\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const createExam = (startDate, endDate) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"RequireCreateExam\"\r\n        })\r\n        const token = getCookie(\"authToken\")\r\n        const link = `${host}/api/v1/createExam`\r\n        const { data } = await axios.post(link, {\r\n            startDate,\r\n            endDate,\r\n            authToken: token\r\n        }, {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        })\r\n        dispatch({\r\n            type: \"CreateExamSuccess\",\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"CreateExamFailure\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const clearCreateExam = () => async (dispatch) => {\r\n    dispatch({\r\n        type: \"clearCreateExam\"\r\n    })\r\n}\r\n\r\nexport const clearSendAnswer = () => async (dispatch) => {\r\n    dispatch({\r\n        type: \"clearSendAnswer\"\r\n    })\r\n}\r\n\r\nexport const takeExam = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"RequireTakeExam\",\r\n        })\r\n        const token = getCookie(\"authToken\")\r\n        const link = `${host}/api/v1/takeExam/${id}`\r\n        const { data } = await axios.post(link, {\r\n            authToken: token\r\n        }, {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        })\r\n\r\n        dispatch({\r\n            type: \"TakeExamSuccess\",\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"TakeExamFailure\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const sendAnswers = (answers, examId) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"RequireSendAnswers\"\r\n        })\r\n        const link = `${host}/api/v1/getAnswers/${examId}`\r\n        const token = getCookie(\"authToken\")\r\n        const { data } = await axios.post(link, {\r\n            answers,\r\n            authToken: token\r\n        }, {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        })\r\n        dispatch({\r\n            type: \"SendAnswerSuccess\",\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"SendAnswerFailure\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const calculateScore = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"RequireCalScore\"\r\n        })\r\n        const token = getCookie(\"authToken\")\r\n        const link = `${host}/api/v1/calculateScore/${id}`\r\n        const { data } = await axios.post(link, {\r\n            authToken: token\r\n        }, {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        })\r\n        dispatch({\r\n            type: \"CalScoreSuccess\",\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"CalScoreFailure\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getScore = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"RequireGetScore\"\r\n        })\r\n        const link = `${host}/api/v1/getScore/${id}`\r\n        const token = getCookie(\"authToken\")\r\n        const {data} = await axios.post(link, {\r\n            authToken: token\r\n        }, {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        })\r\n        dispatch({\r\n            type: \"GetScoreSuccess\",\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GetScoreFailure\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\n// Get Scores of all students for a particular exam id\r\nexport const getScores = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"RequireGetScore\"\r\n        })\r\n        const link = `${host}/api/v1/getMyScore/${id}`\r\n        const token = getCookie(\"authToken\")\r\n        const {data} = await axios.post(link, {\r\n            authToken: token\r\n        },{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        })\r\n        dispatch({\r\n            type: \"GetScoreSuccess\",\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GetScoreFailure\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}"],"names":["props","score","className","studentId","name","examId","questions","length","dispatch","useDispatch","useSelector","state","useParams","useEffect","getScores","console","log","scores","map","item","host","getCookie","cname","ca","decodeURIComponent","document","cookie","split","i","c","charAt","substring","indexOf","searchStudent","keyword","type","link","Accept","token","axios","authToken","data","payload","response","searchTeacher","getStudentProfile","id","getMyStudents","addRemoveStudent","getExam","getMyExam","createExam","startDate","endDate","clearCreateExam","clearSendAnswer","takeExam","sendAnswers","answers","calculateScore","getScore"],"sourceRoot":""}