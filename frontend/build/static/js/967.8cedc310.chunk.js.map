{"version":3,"file":"static/js/967.8cedc310.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@mui/icons-material/LockOutlined.js","../node_modules/@mui/icons-material/VisibilityOffOutlined.js","../node_modules/@mui/icons-material/VisibilityOutlined.js","../node_modules/password-validator/src/constants.js","../node_modules/password-validator/src/index.js","../node_modules/password-validator/src/lib.js","../node_modules/password-validator/src/validationMessages.js","../node_modules/react-top-loading-bar/src/useInterval.ts","../node_modules/react-top-loading-bar/src/utils.ts","../node_modules/react-top-loading-bar/src/index.tsx"],"sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6c3.79 0 7.17 2.13 8.82 5.5-.59 1.22-1.42 2.27-2.41 3.12l1.41 1.41c1.39-1.23 2.49-2.77 3.18-4.53C21.27 7.11 17 4 12 4c-1.27 0-2.49.2-3.64.57l1.65 1.65C10.66 6.09 11.32 6 12 6zm-1.07 1.14L13 9.21c.57.25 1.03.71 1.28 1.28l2.07 2.07c.08-.34.14-.7.14-1.07C16.5 9.01 14.48 7 12 7c-.37 0-.72.05-1.07.14zM2.01 3.87l2.68 2.68C3.06 7.83 1.77 9.53 1 11.5 2.73 15.89 7 19 12 19c1.52 0 2.98-.29 4.32-.82l3.42 3.42 1.41-1.41L3.42 2.45 2.01 3.87zm7.5 7.5 2.61 2.61c-.04.01-.08.02-.12.02-1.38 0-2.5-1.12-2.5-2.5 0-.05.01-.08.01-.13zm-3.4-3.4 1.75 1.75c-.23.55-.36 1.15-.36 1.78 0 2.48 2.02 4.5 4.5 4.5.63 0 1.23-.13 1.77-.36l.98.98c-.88.24-1.8.38-2.75.38-3.79 0-7.17-2.13-8.82-5.5.7-1.43 1.72-2.61 2.93-3.53z\"\n}), 'VisibilityOffOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6c3.79 0 7.17 2.13 8.82 5.5C19.17 14.87 15.79 17 12 17s-7.17-2.13-8.82-5.5C4.83 8.13 8.21 6 12 6m0-2C7 4 2.73 7.11 1 11.5 2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 5c1.38 0 2.5 1.12 2.5 2.5S13.38 14 12 14s-2.5-1.12-2.5-2.5S10.62 9 12 9m0-2c-2.48 0-4.5 2.02-4.5 4.5S9.52 16 12 16s4.5-2.02 4.5-4.5S14.48 7 12 7z\"\n}), 'VisibilityOutlined');\n\nexports.default = _default;","module.exports = {\n  error: {\n    length: 'Length should be a valid positive number',\n    password: 'Password should be a valid string'\n  },\n  regex: {\n    digits: '(\\\\d.*)',\n    letters: '([a-zA-Z].*)',\n    symbols: '([`~\\\\!@#\\\\$%\\\\^\\\\&\\\\*\\\\(\\\\)\\\\-_\\\\=\\\\+\\\\[\\\\\\{\\\\}\\\\]\\\\\\\\\\|;:\\\\\\'\",<.>\\\\/\\\\?€£¥₹§±].*)',\n    spaces: '([\\\\s].*)'\n  }\n};\n","var lib = require('./lib');\nvar error = require('./constants').error;\nvar getValidationMessage = require('./validationMessages');\n\n/**\n * Validates that a number is a valid length (positive number)\n *\n * @private\n * @param {number} num - Number to validate\n */\nfunction _validateLength(num) {\n  const len = Number(num);\n  if (isNaN(len) || !Number.isInteger(len) || len < 1) {\n    throw new Error(error.length);\n  }\n}\n\n/**\n * Tests a validation and return the result\n *\n * @private\n * @param {string} property - Property to validate\n * @return {boolean} Boolean value indicting the validity\n *           of the password against the property\n */\nfunction _isPasswordValidFor(property) {\n  return lib[property.method].apply(this, property.arguments);\n}\n\n/**\n * Registers the properties of a password-validation schema object\n *\n * @private\n * @param {string} method - Property name\n * @param {array} arguments - arguments for the func property\n */\nfunction _register(method, args, description) {\n  // Add property to the schema\n  this.properties.push({ method, arguments: args, description });\n  return this;\n}\n\nclass PasswordValidator {\n  /**\n   * Creates a password-validator schema\n   *\n   * @constructor\n   */\n  constructor() {\n    this.properties = [];\n  }\n\n  /**\n   * Method to validate the password against schema\n   *\n   * @param {string} pwd - password to validate\n   * @param {object} [options] - optional options to configure validation\n   * @param {boolean} [options.list] - asks for a list of validation\n   *           failures instead of just true/false\n   * @param {boolean} [options.details] - asks for more details about\n   *           failed validations including arguments, and error messages\n   * @return {boolean|array} Boolean value indicting the validity\n   *           of the password as per schema, if 'options.list' or\n   *           'options.details' is not set. Otherwise, it returns an\n   *           array of property names which failed validations\n   */\n  validate(pwd, options) {\n    this.list = Boolean(options && options.list);\n    this.details = Boolean(options && options.details);\n    this.password = String(pwd);\n\n    this.positive = true;\n\n    if (this.list || this.details) {\n      return this.properties.reduce((errorList, property) => {\n        // Applies all validations defined in lib one by one\n        if (!_isPasswordValidFor.call(this, property)) {\n          // If the validation for a property fails,\n          // add it to the error list\n          var detail = property.method;\n          // If the details option was provided,\n          // return a rich object including validation message\n          if (this.details) {\n            detail = { validation: property.method };\n            if (property.arguments && property.arguments[0]) {\n              detail.arguments = property.arguments[0];\n            }\n\n            if (!this.positive && property.method !== 'not') {\n              detail.inverted = true;\n            }\n            var description = property.arguments && property.arguments[1];\n            var validationMessage = description || getValidationMessage(property.method, detail.arguments, detail.inverted);\n            detail.message = validationMessage;\n          }\n\n          return errorList.concat(detail);\n        }\n        return errorList;\n      }, []);\n    }\n    return this.properties.every(_isPasswordValidFor.bind(this));\n  }\n\n  /**\n   * Rule to mandate the presence of letters in the password\n   *\n   * @param {number} [count] - minimum number of letters required\n   * @param {string} [description] - description of the validation\n   */\n  letters(count) {\n    count && _validateLength(count);\n    return _register.call(this, 'letters', arguments);\n  }\n\n  /**\n   * Rule to mandate the presence of digits in the password\n   *\n   * @param {number} [count] - minimum number of digits required\n   * @param {string} [description] - description of the validation\n   */\n  digits(count) {\n    count && _validateLength(count);\n    return _register.call(this, 'digits', arguments);\n  }\n\n  /**\n   * Rule to mandate the presence of symbols in the password\n   *\n   * @param {number} [count] - minimum number of symbols required\n   * @param {string} [description] - description of the validation\n   */\n  symbols(count) {\n    count && _validateLength(count);\n    return _register.call(this, 'symbols', arguments);\n  }\n\n  /**\n   * Rule to specify a minimum length of the password\n   *\n   * @param {number} num - minimum length\n   * @param {string} [description] - description of the validation\n   */\n  min(num) {\n    _validateLength(num);\n    return _register.call(this, 'min', arguments);\n  }\n\n  /**\n   * Rule to specify a maximum length of the password\n   *\n   * @param {number} num - maximum length\n   * @param {string} [description] - description of the validation\n   */\n  max(num) {\n    _validateLength(num);\n    return _register.call(this, 'max', arguments);\n  }\n\n  /**\n   * Rule to mandate the presence of lowercase letters in the password\n   *\n   * @param {number} [count] - minimum number of lowercase letters required\n   * @param {string} [description] - description of the validation\n   */\n  lowercase(count) {\n    count && _validateLength(count);\n    return _register.call(this, 'lowercase', arguments);\n  }\n\n  /**\n   * Rule to mandate the presence of uppercase letters in the password\n   *\n   * @param {number} [count] - minimum number of uppercase letters required\n   * @param {string} [description] - description of the validation\n\n   */\n  uppercase(count) {\n    count && _validateLength(count);\n    return _register.call(this, 'uppercase', arguments);\n  }\n\n  /**\n   * Rule to mandate the presence of space in the password\n   * It can be used along with 'not' to not allow spaces\n   * in the password\n   *\n   * @param {number} [count] - minimum number of spaces required\n   * @param {string} [description] - description of the validation\n   */\n  spaces(count) {\n    count && _validateLength(count);\n    return _register.call(this, 'spaces', arguments);\n  }\n\n  /**\n   * Rule to invert the effects of 'not'\n   * Apart from that, 'has' is also used\n   * to make the api readable and chainable\n   *\n   * @param {string|RegExp} [patten] - pattern to match\n   * @param {string} [description] - description of the validation\n   */\n  has() {\n    return _register.call(this, 'has', arguments);\n  }\n\n  /**\n   * Rule to invert the next applied rules.\n   * All the rules applied after 'not' will have opposite effect,\n   * until 'has' rule is applied\n   *\n   * @param {string|RegExp} [patten] - pattern to not match\n   * @param {string} [description] - description of the validation\n   */\n  not() {\n    return _register.call(this, 'not', arguments);\n  }\n\n  /**\n   * Rule to invert the effects of 'not'\n   * Apart from that, 'is' is also used\n   * to make the api readable and chainable\n   */\n  is() {\n    return _register.call(this, 'is', arguments);\n  }\n\n  /**\n   * Rule to whitelist words to be used as password\n   *\n   * @param {array} list - list of values allowed\n   * @param {string} [description] - description of the validation\n   */\n  oneOf() {\n    return _register.call(this, 'oneOf', arguments);\n  }\n}\n\nmodule.exports = PasswordValidator;\n","/**\n * Generic method to test regex\n *\n * @private\n * @param {string} regex - regex to test\n *                           with password\n */\nvar regex = require('./constants').regex;\n\nfunction _process(regexp, repeat) {\n  if (repeat && repeat > 1) {\n    const parsedRepeat = parseInt(repeat, 10);\n    return new RegExp(regexp + '{' + parsedRepeat + ',}').test(this.password) === this.positive;\n  }\n  return new RegExp(regexp).test(this.password) === this.positive;\n}\n\nmodule.exports = {\n\n  /**\n   * Method to invert the next validations\n   *\n   * @param {RegExp} [symbol] - custom Regex which should not be present\n   */\n  not: function not(symbol) {\n    this.positive = false;\n    if (symbol) {\n      return _process.call(this, symbol);\n    }\n    return true;\n  },\n\n  /**\n   * Method to invert the effects of not()\n   *\n   * @param {RegExp} [symbol] - custom Regex which should be present\n   */\n  has: function has(symbol) {\n    this.positive = true;\n    if (symbol) {\n      return _process.call(this, symbol);\n    }\n    return true;\n  },\n\n  /**\n   * Method to invert the effects of not() and\n   * to make the api readable and chainable\n   *\n   */\n  is: function is() {\n    this.positive = true;\n    return true;\n  },\n\n  /**\n   * Method to specify a minimum length\n   *\n   * @param {number} num - minimum length\n   */\n  min: function min(num) {\n    return this.password.length >= num;\n  },\n\n  /**\n   * Method to specify a maximum length\n   *\n   * @param {number} num - maximum length\n   */\n  max: function max(num) {\n    return this.password.length <= num;\n  },\n\n  /**\n   * Method to validate the presence of digits\n   *\n   * @param {number} repeat - count of required digits\n   */\n  digits: function digits(repeat) {\n    return _process.call(this, regex.digits, repeat);\n  },\n\n  /**\n   * Method to validate the presence of letters\n   *\n   * @param {number} repeat - count of required letters\n   */\n  letters: function letters(repeat) {\n    return _process.call(this, regex.letters, repeat);\n  },\n\n  /**\n   * Method to validate the presence of uppercase letters\n   *\n   * @param {number} repeat - count of required uppercase letters\n   */\n  uppercase: function uppercase(repeat) {\n    if (repeat && repeat > 1) {\n      let characterIndex = 0;\n      let upperCaseLetters = 0;\n\n      while ((upperCaseLetters < repeat) && (characterIndex < this.password.length)) {\n        const currentLetter = this.password.charAt(characterIndex);\n        if (currentLetter !== currentLetter.toLowerCase()) {\n          upperCaseLetters++;\n        }\n        characterIndex++;\n      }\n\n      return (upperCaseLetters === repeat) === this.positive;\n    }\n    return (this.password !== this.password.toLowerCase()) === this.positive;\n  },\n\n  /**\n   * Method to validate the presence of lowercase letters\n   *\n   * @param {number} repeat - count of required lowercase letters\n   */\n  lowercase: function lowercase(repeat) {\n    if (repeat && repeat > 1) {\n      let characterIndex = 0;\n      let lowerCaseLetters = 0;\n\n      while ((lowerCaseLetters < repeat) && (characterIndex < this.password.length)) {\n        const currentLetter = this.password.charAt(characterIndex);\n        if (currentLetter !== currentLetter.toUpperCase()) {\n          lowerCaseLetters++;\n        }\n        characterIndex++;\n      }\n\n      return (lowerCaseLetters === repeat) === this.positive;\n    }\n    return (this.password !== this.password.toUpperCase()) === this.positive;\n  },\n\n  /**\n   * Method to validate the presence of symbols\n   *\n   * @param {number} repeat - count of required symbols\n   */\n  symbols: function symbols(repeat) {\n    return _process.call(this, regex.symbols, repeat);\n  },\n\n  /**\n   * Method to validate the presence of space\n   *\n   * @param {number} repeat - count of required spaces\n   */\n  spaces: function spaces(repeat) {\n    return _process.call(this, regex.spaces, repeat);\n  },\n\n  /**\n   * Method to provide pre-defined values for password\n   *\n   * @param {array} list - list of values allowed\n   */\n  oneOf: function oneOf(list) {\n    return list.indexOf(this.password) >= 0 === this.positive;\n  }\n};\n","module.exports = function (method, arg, inverted) {\n  const msgList = inverted ? negativeMessages : positiveMessages;\n  return msgList[method] && msgList[method](arg);\n};\n\nconst positiveMessages = {\n  min: (num) => `The string should have a minimum length of ${num} character${pluralify(num)}`,\n  max: (num) => `The string should have a maximum length of ${num} character${pluralify(num)}`,\n  letters: (num = 1) => `The string should have a minimum of ${num} letter${pluralify(num)}`,\n  digits: (num = 1) => `The string should have a minimum of ${num} digit${pluralify(num)}`,\n  uppercase: (num = 1) => `The string should have a minimum of ${num} uppercase letter${pluralify(num)}`,\n  lowercase: (num = 1) => `The string should have a minimum of ${num} lowercase letter${pluralify(num)}`,\n  symbols: (num = 1) => `The string should have a minimum of ${num} symbol${pluralify(num)}`,\n  spaces: (num = 1) => `The string should have a minimum of ${num} space${pluralify(num)}`,\n  oneOf: (list) => `The string should be ${list.length > 1 ? `one of ${list.slice(0, -1).join(', ')} and ` : ''}${list[list.length - 1]}`,\n  has: (pattern) => `The string should have pattern '${pattern}'`,\n  not: (pattern) => `The string should not have pattern '${pattern}'`\n};\n\nconst negativeMessages = {\n  min: (num) => `The string should have a maximum length of ${num} character${pluralify(num)}`,\n  max: (num) => `The string should have a minimum length of ${num} character${pluralify(num)}`,\n  letters: (num = 0) => `The string should ${num === 0 ? 'not have' : `have a maximum of ${num}`} letter${pluralify(num)}`,\n  digits: (num = 0) => `The string should ${num === 0 ? 'not have' : `have a maximum of ${num}`} digit${pluralify(num)}`,\n  uppercase: (num = 0) => `The string should ${num === 0 ? 'not have' : `have a maximum of ${num}`} uppercase letter${pluralify(num)}`,\n  lowercase: (num = 0) => `The string should ${num === 0 ? 'not have' : `have a maximum of ${num}`} lowercase letter${pluralify(num)}`,\n  symbols: (num = 0) => `The string should ${num === 0 ? 'not have' : `have a maximum of ${num}`} symbol${pluralify(num)}`,\n  spaces: (num = 0) => `The string should ${num === 0 ? 'not have' : `have a maximum of ${num}`} space${pluralify(num)}`,\n  oneOf: (list) => `The string should not be ${list.length > 1 ? `one of ${list.slice(0, -1).join(', ')} and ` : ''}${list[list.length - 1]}`,\n  has: (pattern) => `The string should not have pattern '${pattern}'`,\n  not: (pattern) => `The string should have pattern '${pattern}'`\n\n};\n\nfunction pluralify(num) {\n  return num === 1 ? '' : 's';\n}\n","import { useEffect, useRef } from 'react'\n\n/** keep typescript happy */\nconst noop = () => {}\n\nexport function useInterval(\n  callback: () => void,\n  delay: number | null | false,\n  immediate?: boolean\n) {\n  const savedCallback = useRef(noop)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  })\n\n  // Execute callback if immediate is set.\n  useEffect(() => {\n    if (!immediate) return\n    if (delay === null || delay === false) return\n    savedCallback.current()\n  }, [immediate])\n\n  // Set up the interval.\n  useEffect(() => {\n    if (delay === null || delay === false) return undefined\n    const tick = () => savedCallback.current()\n    const id = setInterval(tick, delay)\n    return () => clearInterval(id)\n  }, [delay])\n}\n\nexport default useInterval\n","export function randomInt(min: number, max: number): number {\n  // @ts-ignore\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n","import * as React from 'react'\nimport {\n  CSSProperties,\n  useEffect,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport { useInterval } from './useInterval'\nimport { randomInt } from './utils'\n\ntype IProps = {\n  progress?: number\n  color?: string\n  shadow?: boolean\n  background?: string\n  height?: number\n  onLoaderFinished?: () => void\n  className?: string\n  containerClassName?: string\n  loaderSpeed?: number\n  transitionTime?: number\n  waitingTime?: number\n  style?: CSSProperties\n  containerStyle?: CSSProperties\n  shadowStyle?: CSSProperties\n}\n\nexport type LoadingBarRef = {\n  continuousStart: (startingValue: number, refreshRate: number) => void\n  staticStart: (startingValue: number) => void\n  complete: () => void;\n}\n\nconst LoadingBar = forwardRef<LoadingBarRef, IProps>(\n  (\n    {\n      progress,\n      height = 2,\n      className = '',\n      color = 'red',\n      background = 'transparent',\n      onLoaderFinished,\n      transitionTime = 300,\n      loaderSpeed = 500,\n      waitingTime = 1000,\n      shadow = true,\n      containerStyle = {},\n      style = {},\n      shadowStyle: shadowStyleProp = {},\n      containerClassName = ''\n    },\n    ref\n  ) => {\n    const isMounted = useRef(false);\n    const [localProgress, localProgressSet] = useState<number>(0)\n    const [pressedContinuous, setPressedContinuous] = useState<{\n      active: boolean\n      startingValue: number\n      refreshRate: number\n    }>({ active: false, startingValue: 20, refreshRate: 1000 })\n    const [usingProps, setUsingProps] = useState(false)\n\n    const [pressedStaticStart, setStaticStartPressed] = useState<{\n      active: boolean\n      value: number\n    }>({ active: false, value: 20 })\n\n    const initialLoaderStyle: CSSProperties = {\n      height: '100%',\n      background: color,\n      transition: `all ${loaderSpeed}ms ease`,\n      width: '0%',\n    }\n\n    const loaderContainerStyle: CSSProperties = {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      height,\n      background,\n      zIndex: 99999999999,\n      width: 100 + '%',\n    }\n\n    const initialShadowStyles: CSSProperties = {\n      boxShadow: `0 0 10px ${color}, 0 0 10px ${color}`,\n      width: '5%',\n      opacity: 1,\n      position: 'absolute',\n      height: '100%',\n      transition: `all ${loaderSpeed}ms ease`,\n      transform: 'rotate(3deg) translate(0px, -4px)',\n      left: '-10rem',\n    }\n\n    const [loaderStyle, loaderStyleSet] = useState<CSSProperties>(\n      initialLoaderStyle\n    )\n    const [shadowStyle, shadowStyleSet] = useState<CSSProperties>(\n      initialShadowStyles\n    )\n\n    useEffect(() => {\n      isMounted.current = true;\n      return () => {\n        isMounted.current = false;\n      }\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n      continuousStart(startingValue: number, refreshRate: number = 1000) {\n        if (pressedStaticStart.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(10, 20)\n        setPressedContinuous({\n          active: true,\n          refreshRate,\n          startingValue,\n        })\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      staticStart(startingValue: number) {\n        if (pressedContinuous.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(30, 50)\n        setStaticStartPressed({\n          active: true,\n          value: val,\n        })\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      complete() {\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n        localProgressSet(100)\n        checkIfFull(100)\n      },\n    }))\n\n    useEffect(() => {\n      loaderStyleSet({\n        ...loaderStyle,\n        background: color,\n      })\n\n      shadowStyleSet({\n        ...shadowStyle,\n        boxShadow: `0 0 10px ${color}, 0 0 5px ${color}`,\n      })\n    }, [color])\n\n    useEffect(() => {\n      if (ref) {\n        if (ref && progress !== undefined) {\n          console.warn(\n            'react-top-loading-bar: You can\\'t use both controlling by props and ref methods to control the bar! Please use only props or only ref methods! Ref methods will override props if \"ref\" property is available.'\n          )\n          return\n        }\n        checkIfFull(localProgress)\n        setUsingProps(false)\n      } else {\n        if (progress) checkIfFull(progress)\n\n        setUsingProps(true)\n      }\n    }, [progress])\n\n    const checkIfFull = (_progress: number) => {\n      if (_progress >= 100) {\n        // now it should wait a little bit\n        loaderStyleSet({\n          ...loaderStyle,\n          width: '100%',\n        })\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 10 + '%',\n          })\n        }\n\n        setTimeout(() => {\n          if (!isMounted.current) {\n            return;\n          }\n          // now it can fade out\n          loaderStyleSet({\n            ...loaderStyle,\n            opacity: 0,\n            width: '100%',\n            transition: `all ${transitionTime}ms ease-out`,\n            color: color,\n          })\n\n          setTimeout(() => {\n            if (!isMounted.current) {\n              return;\n            }\n            // here we wait for it to fade\n            if (pressedContinuous.active) {\n              // if we have continous loader just ending, we kill it and reset it\n              setPressedContinuous({\n                ...pressedContinuous,\n                active: false,\n              })\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (pressedStaticStart.active) {\n              setStaticStartPressed({\n                ...pressedStaticStart,\n                active: false,\n              })\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (onLoaderFinished) onLoaderFinished()\n            localProgressSet(0)\n            checkIfFull(0)\n          }, transitionTime)\n        }, waitingTime)\n      } else {\n        loaderStyleSet((_loaderStyle) => {\n          return {\n            ..._loaderStyle,\n            width: _progress + '%',\n            opacity: 1,\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          }\n        })\n\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 5.5 + '%',\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          })\n        }\n      }\n    }\n\n    useInterval(\n      () => {\n        const random = randomInt(10, 20)\n\n        if (localProgress + random < 90) {\n          localProgressSet(localProgress + random)\n          checkIfFull(localProgress + random)\n        }\n      },\n      pressedContinuous.active ? pressedContinuous.refreshRate : null\n    )\n\n    return (\n      <div className={containerClassName} style={{...loaderContainerStyle, ...containerStyle}}>\n        <div className={className} style={{...loaderStyle, ...style}}>\n          {shadow ? <div style={{...shadowStyle, ...shadowStyleProp}} /> : null}\n        </div>\n      </div>\n    )\n  }\n)\n\nexport {\n  IProps,\n}\n\nexport default LoadingBar\n"],"names":["module","exports","instance","Constructor","TypeError","__esModule","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_interopRequireDefault","require","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","error","password","regex","digits","letters","symbols","spaces","lib","getValidationMessage","_validateLength","num","len","Number","isNaN","isInteger","Error","_isPasswordValidFor","property","method","apply","this","arguments","_register","args","description","properties","push","PasswordValidator","pwd","options","list","Boolean","details","String","positive","reduce","errorList","call","detail","validation","inverted","validationMessage","message","concat","every","bind","count","_process","regexp","repeat","parsedRepeat","parseInt","RegExp","test","not","symbol","has","is","min","max","uppercase","characterIndex","upperCaseLetters","currentLetter","charAt","toLowerCase","lowercase","lowerCaseLetters","toUpperCase","oneOf","indexOf","arg","msgList","negativeMessages","positiveMessages","pluralify","slice","join","pattern","noop","randomInt","Math","floor","random","LoadingBar","forwardRef","ref","progress","height","className","color","background","onLoaderFinished","transitionTime","loaderSpeed","waitingTime","shadow","containerStyle","style","shadowStyle","shadowStyleProp","containerClassName","isMounted","useRef","useState","localProgress","localProgressSet","active","startingValue","refreshRate","pressedContinuous","setPressedContinuous","usingProps","setUsingProps","value","pressedStaticStart","setStaticStartPressed","initialLoaderStyle","transition","width","loaderContainerStyle","position","top","left","zIndex","initialShadowStyles","boxShadow","opacity","transform","loaderStyle","loaderStyleSet","shadowStyleSet","useEffect","current","useImperativeHandle","continuousStart","console","warn","val","checkIfFull","staticStart","complete","undefined","_progress","setTimeout","_loaderStyle","callback","delay","immediate","savedCallback","id","setInterval","clearInterval","useInterval","React"],"sourceRoot":""}